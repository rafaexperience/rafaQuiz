rafaQuiz

Ejercicio Miriadax Curso 2
Desarrollo de servicios en la nube con HTML5, Javascript y node.js

Módulo 6 en adelante.

licencia:MIT

-------------------------------------------------------------------------------------------
Aquí haré un historial con todo lo que vaya haciendo y los problemas que me encuentre y (espero) sus soluciones
los problemas los marcare con *
-------------------------------------------------------------------------------------------
ANTES DE EMPEZAR.

    - Precedentes:

        Tuve algunos problemas haciendo la aplicación, y no se cuantos fallos arrastre, pues no siempre
        sabia lo que hacia, asi que decidi empezar de nuevo, controlándolo todo mejor, incluidos mensajes de error en heroku log.

        Por mencionar algunos problemas que tuve, por si le es util a alguien, o alguien vio este
        repositorio, dejo los fallos que encontré y como los solucione.

            *FALLOS VERSION ANTERIOR(ELIMINADA)

                CORREGIDOS

                    - Procfile tenia un caracter invisible por guardarlo como utf con dom. y hacia que foreman no ejecutase.
                    - models.js tenia repetido Quiz.create
                    - router/index.js repetia get author
                    - el favicon no salia - cambie formato de png a ico y ok
                    - En un momento dado subi la carpeta como Models y debia ser models.
                            No fui capaz de cambiarlo en windows ni con git mv Model model.
                            En local estaba ok, pero los cambios no los reconocia al subirlos a github
                        Consegui corregirlo haciendo el commit desde linux y subiendolo desde alli.
                        Hice un monton de commits de más intentandolo.
                    - 
                    - El dashboard de heroku siempre me decia que el dyno estaba sleepin y no cargaba, no se
                      si era porque no funcionaba o por el fallo de la página.
                       (Al subir la aplicación de nuevo (sin posgres, por ahora) funciona ok, asi que seria
                         fallo de aplicación - ver Quiz6).

                    - Tambien me daba un fallo segun heroku log al cargar /author,
	    			  Le habia puesto variable para titulo, como con index, y la pagina se creaba ok,
                   	  pero en heroku logs salia como que <%=title%>(en layout.ejs) no estaba definido
                        
                      Sin embargo con index no daba problemas y lo copie tal cual. Ademas cargaba ok
                      el titulo distinto cuando cargaba la página.
                       -- Tenia la direccion de los videos mal - video/.. en vez de videos/.. VER QUIZ 6+:


                SIN CORREGIR
                      - Estado: adaptado a heroku y funcionando en local.

                    - Al subir posgres dejo de funcionar en heroku. porque no encontraba models.
	                  Puede que fuera por lo de la carpeta Models y solo se arreglara en github
        	          y no en heroku.

                       

EMPEZANDO

        Uso normalmente windows 8.1 para programar con el entorno visual studio community.
        También Sublime o Code(o vsCode) para archivos individuales o por contrastar.
         En el Visual tengo añadido nodejs tools, ya instalé git bash y heroku.

        Tambien uso una máquina virtual debian desde el windows con hiper-v y un mini pc con linux poppy,
         con git y heroku también, para hacer cosas fuera de casa.
         
        En vs community hay varias plantillas para hacer aplicaciones con o sin express 3 o 4.
        En las transparencias de los módulos, recomiendan usar las versiones del curso y
        usan partials(con ejs) en lugar de jade(que es como viene en la plantilla),
        asi que en principio lo haré según el curso.
---------------------------------------------------------------------------------
QUIZ 1 CREACION DEL ESQUELETO.
	- Paso 1. Instalar paquete express-generator
		- Creo carpeta, inicio git(git init), creo proyecto para visual studio.
		- Instalo express-generator4.9.0 con npm install express-generator@4.9.0
			(no creo carpeta nueva, para que solo haya un node_modules, 
			como generator no esta en package, no se considera parte de la aplicacion y no se instalara con npm install)
		- Ejecuto express (con path) - se crean app.js,package.json y carpetas segun transparencia

	- Paso 2. Generar esqueleto del proyecto Quiz
		- Instalo paquetes de package.json agregados con express (npm install)
		- Añado .gitignore e incluyo archivos de visual y carpeta node_modules
		- Añado README.md, LICENCE (MIT) y este archivo (notas.txt) QUE IRE ACTUALIZANDO CON CADA COMMIT
	- Paso 3. Guardar versión (commit) con git
        -* Hago git add . para añadir los archivos y me avisa que varios archivos se guardaran en git con 
            otro fin de linea CRLF, pero se mantendran en mi carpeta.
            Compruebo archivos, varios estan con Europeo occidental (windows)-pagina de codigos 1252
            y fin de linea windows CRLF.
            según investigo, es normal, para poder trabajar desde distintos SSOO
            Los cambio todos a Unicode(UTF-8-sin signatura) de todos modos
        - Ejecuto con npm start y funciona ok en http://localhost:3000/ -- > página express
        - Añado comentarios a todos los archivos de código para indicar que hacen  
           y a mensajes de error, para saber de donde vienen.     
        - commit -m "Esqueleto del proyecto rafaquiz con express-generator" ok

QUIZ 2 PRIMERA PAGINA Y FAVICON

    - Paso 1. Se transforma la página de entrada GET/, en página bienvenida del portal.
        - Modifico routes/index.js. Cambio el valor de la variable title de "Express" a "RafaQuiz"
    - Paso 2. Quitamos ruta /users
        - Elimino ruta users - modifico app.js (var=require y use) y borro archivo routes/users.ejs 
    - Paso 3. Añadimos favicon
        - Para añadir favicon, uso el método desde la cabecera de la página.
        - Elimino modulo de serve-favicon en package.json, borro la carpeta en node_modules y quito referencias de app.js
        - Creo icono con paint.net le cambio el tamaño y lo guardo como bmp. Luego le cambio la extension a ico.
        - Guardo icono en public/images
        - Añado <link rel="icon" href="\images\logoQuiz.ico" type="image/x-icon" /> en head de index.ejs
        - Todo ok - solo mensajes get en consola y sale titulo cambiado e icono en http://localhost:3000/
            * puede que al enviar el css se repita el envio?? - no lo considero problema, pero es curioso.
    - Paso 4. Guardamos versión
        - git add . .Tuve que borrar routes/users.js con git rm routes/users.js para que lo registrase
        - todo ok- git commit -m "Primera página y favicon."
            ok.
            
QUIZ 3 PRIMERA PREGUNTA

    -Paso 1. Añadir MVC de pregunta y respuesta
        a:Crear directorio controllers/ y el archivo controllers/quiz_controller.js
            -Pues eso. Mas detalles en el código.
        b:Importar controllers/quiz_controller.js en routes/index.js
        c:Introducir nuevas rutas en el enrutador routes/index.js: (GET /quizes/question) y (GET /quizes/answer)
            - Lo mismo. Mas detalles en codigo
        d:Crear directorio views/quizes con las vistas question.ejs y answer.ejs
            - Aqui le añado algunas etiquetas a mayores, tanto aqui como en index.ejs 
    -Paso 2. Añadimos enlace a la pregunta en pagina home.
            - *Sale mal signo admiración, corrigo todas las codificaciones de los archivos nuevos. -- solucionado
            - *Compruebo que funciona y el favicon solo sale en la principal - Puse direcc. con \ en vez de / -- solucionado
            - todo funciona ok. 
    -Paso 3. Guardamos versión.
            - todo ok- git commit -m "Primera pregunta."

QUIZ 4 MARCO DE LA APLICACION
    
    - Paso 1. Instalar express-partials
        - Instalamos npm install express-partials@0.3.0 --save
            Se incluye en package.json ok
    - Paso 2. Aplicar express-partials a app.js
        - Añado require y app.use de partials a app.js
    - Paso 3. Añadir marco con <header>, <nav>, <section> y <footer>
        - creamos el marco layout.ejs en views. Copio el HEAD de index y modifico el titulo - la variable que se le pasa
        - la variable <%- body &> en <section> es la que tiene el contenido de las otras páginas
    - Paso 4. Modificar vistas para que salgan en <section>
        - Borramos <head> y demas del resto de las vistas. index.ejs views/question.ejs y views/answer.ejs
        - Todo responde ok. reviso codificacion utf y grabo de nuevo error.ejs y layout.ejs
    - Paso 5. Guardar versión.
        - - todo ok- git commit -m "Vistas parciales y marco"

QUIZ 4 DISEÑO WEB ADAPTABLE
    - Aqui me salto el ejercicio y le pongo el mismo marco que le puse al curso anterior.
    - Tiene un home a los ejercicios del curso anterior en un servidor gratuito. Se lo incluyo. 
-----------------PENDIENTE AÑADIR ENLACE A GITHUB EN  http://www.rafaexperience.comocreartuweb.es/----------------------------------
    - Se adapta bastante bien, aunque hay detalles.
            -* En pantalla grande el footer no queda abajo (tiene un tamaño minimo, pero en pantallas grandes queda vacio por abajo)
            -* En pantalla movil. la marca --Diseño Movil--, añadida con css(after), no queda centrada.
            -* Las preguntas y respuestas salen cutres, pero como va cambiar el sistema ( mas preguntas, comentarios), no lo toco.
------------------------------------------------------------------------------------------------------------------------------------
    - Resto ok - Pide los recursos ok, responden los enlaces ok y no veo errores de formato (tildes, o caractéres raros)
    - git add. añade todo, menos el stylesheet.css original, que se borro. uso git rm <archivo> y ok
    - aceptamos barco y guardamos. git commit -m "CSS adaptable a móviles y PC´s"

QUIZ 6: DESPLIEGUE EN HEROKU
    - Elimino la versión subida ( con posgrest ) que no funciona
        Siempre ponia sleepin.
        Voy al heroku dashboard y desde settings(abajo de todo) marco delete app..
    - Le añado el remoto de heroku desde git: heroku git:remote -a rafaquiz
    - y actualizo git push heroku master
    - funciona ok en https://rafaquiz.herokuapp.com/.
    - No añadi Procfile ni cambie package.json y funciona ok en heroku. Según dasboard, ejecuta como: web npm start.
         Ya no esta sleepin, asi que supongo que era porque la aplicación estaba mal y
         no llegaba a ejecutarse, por eso  no "despertaba" el dyno.
    - Tambien clono el repositorio: git clone https://github.com/rafaexperience/rafaQuiz.git
         y configuro heroku en el portatil: heroku login
        Añado remoto heroku - git remote add heroku https://git.heroku.com/rafaquiz.git
        ya puedo hacer heroku logs., pero salen los datos muy confusos.
        Reviso documentación y con heroku logs --source app --tail, salen mejor y no pierde la conexion.
    -* Me fijo que el titulo de las páginas esta mal. Compruebo que está mal en las transparencias.
        Intento poner titulo segun página con routes/index.js o controllers/quiz_controller.js.
        (Esto me dio problemas en anterior version, con /author)
        -- rectifique el nombre de la variable <&title&> por <%= title %> y cerre algunas etiquetas con />
            -el titulo sale ok, pero veo que no sale el favicon, lo dejo como antes y sigue ko.
            - No sale la petición en logs, pruebo varias cosas y al cambiar el formato a png aparece ok. ¡¡¡???
            - Parece que ya funciona todo ok.
    - hago git commit --amend -m "CSS adaptable a móviles y PC´s" y Lo reenvio a heroku. (--amend es para añadirlo al commit hecho)
        git push heroku master -f (-f es para que lo suba, aunque el commit en remote(heroku) sea el mismo pero mas atrasado, fast-forwards)
        como el repositorio de heroku no esta pensado para ver los comentarios, no deberia haber problemas.
        De todos modos intentaré hacer un branch para las pruebas y poder subirlas sin afectar el original.
    - todo ok en heroku.
    - Añado Procfile y módifico package.json (Aunque no hacen falta si no hay variables de entorno)
    - Compruebo con foreman start- todo ok
    - git commit -m "Despliegue en la nube (HEROKU)"
    - git push origin master - - ko (por el commit modificado) - lo fuerzo con -f (fue hace poco, no creo que le importe a nadie) ok.
    - git push heroku master - ok (ya estaba forzado de antes); - heroku open 
    - todo ok. titulo segun pagina, favicon en todas y mensages del heroku logs correctos.

QUIZ 6+: (obl.) ENLACE A GITHUB Y /AUTHOR
    - EJERCICIO P2P Obligatorio
            - Crear repositorio en github desde 0, siguiendo las instrucciones.
                Lo que ya hicimos, va.
            - Crear rama créditos,y desde ella:
                Modificar servidor para añadir enlace en <footer> del marco (layout) que apunte al proyecto en github
                    - Modifico views/layout.ejs y le pongo imágenes a los enlaces, por lo mono.
                    - Creo branch créditos y commit desde ella.
                Modificar servidor para responder peticiones GET a /author y devuelva una vista
                 con los autores, su fotografia y un video. Añadir enlace en la barra de navegación a pagina de créditos=/author
                 Despues integrar los cambios con master y subirlo a github. Cuando este ok, a heroku.
                    - Añado linea en routes/index.js, que lo manda a quiz_controller.js (como quiz/question) que la monta a partir
                       de creditos.ejs    (supongo que los créditos se añaden desde bd, mas tarde, por ser varios)
                    - añado creditos.ejs
                    -** Compruebo y da error en variable title de layout.ejs (como en versión anterior)
                        pruebo a desviar con index directo a creditos con titulo - ko - sin titulo - ko - dejo como antes
                        pruebo a desviar con index a quiz_controller.question con titulo cambiado - ko--
                            curiosamente no puse el path a question y sigue dando error en variable title, asi que no tiene que ver.
                            (Se ve que tanto modulo confunde al programa)
                        La pongo como al principio index.js ->quiz_controller.author->creditos.ejs con titulo. - ko
                        vacio creditos.ejs - ok¡¡ por aqui van los tiros.
                        En el path de los videos puse video/ en vez de videos/ (tanta guerra por eso.., en fin) -- solucionado
                    - ahora todo ok en local - salen videos, favicon, enlaces,... podrian estar mejor encuadrados, pero vale
                    - git commit -m "Añadida página créditos GET /author y enlaces". desde rama(branch) créditos.
                    -  push a github desde creditos - ok;  -push heroku desde creditos ok
                    -* La página sigue siendo la de master. Conecto heroku con github en Deploy y cambio para que despliegue créditos
                         Automatic deploys from créditos are enabled ok - pero sigue mostrando la rama master al aplicar
                         Pruebo con Manual deploy un poco mas abajo, selecciono créditos y marco Deploy Branch y sale como se
                         actualiza. -- solucionado
                     - La pruebo y esta ok - aunque veo una raya de enlace por fuera del enlace a wikipedia - corrigo enlace
                     - subo todo y actualizo con Manual deploy ( en heroku dasboard ) - perfecto.
                     - vuelvo a master y hago merge. Me añade todos los 3 commits nuevos de créditos en master - no es como lo queria.
                     - Como master no esta subido voy a juntar los 3 commits en uno. Uso git reset --soft HEAD~3 ,para volver 3
                        commits atras sin que se borre nada. git status para confirmar que todo esta listo - ok
                        foreman start por si acaso - ok. hago commit normal con mensaje "Ejer. modulo6 - ...."
                    - Todo ok push heroku master y push origin master. cambio el Manual deploy de heroku a master. todo ok

MODULO 7
--------
QUIZ 7 LAS BASES DE DATOS

        -Paso1. Sequelize y SQLite3
            instalamos paquetes:
                npm install sequelize@1.7.0 se instala ok, pero tenia fallos de seguridad- elimino de package.json y paso a v3
                npm install sqlite3 da errores y no se instala - no compatible con version de npm y node
                - Me voy a ultimas versiones de ambos (instalo sin poner version) sequelize=^3.5.1 sqlite=^3.0.9
                    ~0.8.0 :significa >= 0.8.0 < 0.9.0.
                    ^0.8.0:significa >=0.7.0 < 1.0.0. 
                    cambiadas ok en package.json
        -Paso2 Definimos modelo (estructura de la tabla de la bd)
            Creamos carpeta models y dentro archivo quiz.js con sequelize.define
            Añadimos models.js en models/ que contruye bd segun el modelo importado y se conecta. 
             Tambien añade datos si esta vacia.
        -Paso3. El controlador
            añadimos al controlador quiz_controller el acceso a quiz.sqlite (Quiz en models.js- > models.Quiz)
        - corrigo un par de errores sintacticos y todo ok con foreman start
        - añado quiz.sqlite a .gitignore. git add . y git commit -m "La base de datos: sequelize.js y SQLite"
                - Por cierto, puedo ver el contenido directamente en quiz.sqlite con un plugin de firefox: sqlite manager